## mysql image version
## ref: https://hub.docker.com/r/library/mysql/tags/
##
image: "mysql"
imageTag: "5.7.20"

## Specify password for root user
##
## Default: random 10 character string
mysqlRootPassword: root1wfA92Aop223dfAFwfjkq143Tdfxjio

## Create a database user
##
mysqlUser: datamesh
mysqlPassword: root2fsdj7823FIqpsf321grvO214r

## Allow unauthenticated access, uncomment to enable
##
# mysqlAllowEmptyPassword: true

## Create a database
##
# mysqlDatabase:

## Specify an imagePullPolicy (Required)
## It's recommended to change this to 'Always' if the image tag is 'latest'
## ref: http://kubernetes.io/docs/user-guide/images/#updating-images
##
imagePullPolicy: IfNotPresent

## Persist data to a persitent volume
persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "fast"
  accessMode: ReadWriteOnce
  size: 128Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 1Gi
    cpu: 1
  limits:
    memory: 4Gi
    cpu: 2

# Custom mysql configuration files used to override default mysql settings
configurationFiles:
  mysql.cnf: |-
    [mysqld]
    skip-name-resolve
    character_set_server = utf8
    max_allowed_packet = 128M
    max_connections = 2000
    max_connect_errors = 10000
    wait_timeout = 3600
    open_files_limit = 65535
